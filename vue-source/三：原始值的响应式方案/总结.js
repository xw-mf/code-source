/**
    在本章中，我们首先介绍了 ref 的概念。ref 本质上是一个“包裹
对象”。因为 JavaScript 的 Proxy 无法提供对原始值的代理，所以我们
需要使用一层对象作为包裹，间接实现原始值的响应式方案。由于“包
裹对象”本质上与普通对象没有任何区别，因此为了区分 ref 与普通响
应式对象，我们还为“包裹对象”定义了一个值为 true 的属性，即
__v_isRef，用它作为 ref 的标识。

    ref 除了能够用于原始值的响应式方案之外，还能用来解决响应
丢失问题。为了解决该问题，我们实现了 toRef 以及 toRefs 这两个
函数。它们本质上是对响应式数据做了一层包装，或者叫作“访问代
理”。

    最后，我们讲解了自动脱 ref 的能力。为了减轻用户的心智负
担，我们自动对暴露到模板中的响应式数据进行脱 ref 处理。这样，
用户在模板中使用响应式数据时，就无须关心一个值是不是 ref 了。
 */