/**
    在本章中，我们首先讨论了解析器的文本模式及其对解析器的影
响。文本模式指的是解析器在工作时所进入的一些特殊状态，如
RCDATA 模式、CDATA 模式、RAWTEXT 模式，以及初始的 DATA 模式
等。在不同模式下，解析器对文本的解析行为会有所不同。

    接着，我们讨论了如何使用递归下降算法构造模板 AST。在
parseChildren 函数运行的过程中，为了处理标签节点，会调用
parseElement 解析函数，这会间接地调用 parseChildren 函数，
并产生一个新的状态机。随着标签嵌套层次的增加，新的状态机也会
随着 parseChildren 函数被递归地调用而不断创建，这就是“递归下
降”中“递归”二字的含义。而上级 parseChildren 函数的调用用于构
造上级模板 AST 节点，被递归调用的下级 parseChildren 函数则用
于构造下级模板 AST 节点。最终会构造出一棵树型结构的模板 AST，
这就是“递归下降”中“下降”二字的含义。

    在解析模板构建 AST 的过程中，parseChildren 函数是核心。
每次调用 parseChildren 函数，就意味着新状态机的开启。状态机
的结束时机有两个。
        第一个停止时机是当模板内容被解析完毕时。
        第二个停止时机则是遇到结束标签时，这时解析器会取得父级节
点栈栈顶的节点作为父节点，检查该结束标签是否与父节点的标
签同名，如果相同，则状态机停止运行。

    我们还讨论了文本节点的解析。解析文本节点本身并不复杂，它
的复杂点在于，我们需要对解析后的文本内容进行 HTML 实体的解码
工作。WHATWG 规范中也定义了解码 HTML 实体过程中的状态迁移
流程。HTML 实体类型有两种，分别是命名字符引用和数字字符引
用。命名字符引用的解码方案可以总结为两种。
        当存在分号时：执行完整匹配。
        当省略分号时：执行最短匹配。
        
    对于数字字符引用，则需要按照 WHATWG 规范中定义的规则逐
步实现。
 */